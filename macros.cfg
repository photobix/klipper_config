###############################
# sensorless homing
###############################

[gcode_macro SENSORLESS_HOME_X]
gcode:
    {% set HOME_CUR = 0.700 %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %}
    {% set RUN_CUR = driver_config.run_current %}
    {% set HOLD_CUR = driver_config.hold_current %}
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 X0
    # Move away
    G90
    G1 X5 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}

[gcode_macro SENSORLESS_HOME_Y]
gcode:
    {% set HOME_CUR = 0.700 %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_y'] %}
    {% set RUN_CUR = driver_config.run_current %}
    {% set HOLD_CUR = driver_config.hold_current %}
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 Y0
    # Move away
#    G90
#    G1 X5 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}

###############################
# start print
###############################

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
    M140 S{BED_TEMP} ; Start bed heating
    G90 ; Use absolute coordinates
    M190 S{BED_TEMP} ; Wait for bed to reach temperature
    G28 ; Home the printer
    G1 X2 Y2 Z5 F3000 ; Move the nozzle near the bed
    G1 Z0.25 F300 ; Move the nozzle very close to the bed
    M109 S{EXTRUDER_TEMP} ; Set and wait for nozzle to reach temperature
    G92 E0 ; Reset Extruder
    # intro line
#    G1 X0.1 Y20 Z0.25 F5000.0 ; Move to start position
    G1 X0.1 Y140.0 Z0.25 F1500.0 E15 ; Draw the first line
    G1 X0.4 Y140.0 Z0.25 F5000.0 ; Move to side a little
    G1 X0.4 Y20 Z0.25 F1500.0 E30 ; Draw the second line
    G92 E0 ; Reset Extruder
    G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X5 Y20 Z0.3 F5000.0 ; Move over to prevent blob squish

###############################
# end print
###############################

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    M107
    G91 ;Relative positioning
    G1 E-0.6 Z0.2 F4200 ;Retract and raise Z
    G1 X5 Y5 F3000 ;Wipe out
    G1 Z20 ;Raise Z more
    # Move Nozzle away and present print
    G90 ;Absolute positioning
    G1 X30 Y151 F3000
    M84 X Y E ; disable motors

###############################
# cancel print
###############################

[gcode_macro CANCEL_PRINT]
#description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    M107
    G91 ;Relative positioning
    G1 E-0.6 Z0.2 F4200 ;Retract and raise Z
    G1 X5 Y5 F3000 ;Wipe out
    G1 Z20 ;Raise Z more
    # Move Nozzle away and present print
    G90 ;Absolute positioning
    G1 X30 Y151 F3000
    M84 X Y E ; disable motors

###############################
# pause / resume print
###############################

[gcode_macro PAUSE]
#description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
#  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
#  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set x_park = 5 %}
  {% set y_park = 5 %}
  
##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
#description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

###############################
# Filament Change
###############################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

###############################
# timelaps
###############################

[gcode_macro TIMELAPSE_TAKE_FRAME]
gcode:
 {action_call_remote_method("timelapse_newframe")}

###############################
# Klipper Config Check
###############################

[gcode_macro DUMP_WARNINGS]
description: Debug: Print all warning messages from klipper
gcode:
  {% set parameters = ["printer.configfile.warnings:"] %}
  {% for name1 in printer.configfile.warnings %}
      {% set parameters = parameters.append("%s -> %s -> %s\n%s" % (name1.type, name1.section, name1.option, name1.message)) %}
  {% endfor %}
  {action_respond_info(parameters|join("\n"))}

###############################
# Neopixel Startup
###############################

[delayed_gcode Welcome_0]
initial_duration: 0
gcode:
  SET_LED LED=neo RED=0.0 GREEN=0.0 BLUE=0.0

[delayed_gcode Welcome_1]
initial_duration: 0.5
gcode:
  SET_LED LED=neo RED=0.5 GREEN=0.5 BLUE=0.5 INDEX=1

[delayed_gcode Welcome_2]
initial_duration: 1
gcode:
  SET_LED LED=neo RED=0.5 GREEN=0.5 BLUE=0.5 INDEX=2

[delayed_gcode Welcome_3]
initial_duration: 1.5
gcode:
  SET_LED LED=neo RED=0.5 GREEN=0.5 BLUE=0.5 INDEX=3

[delayed_gcode Welcome_4]
initial_duration: 2
gcode:
  SET_LED LED=neo RED=0.5 GREEN=0.5 BLUE=0.5 INDEX=4

[delayed_gcode Welcome_5]
initial_duration: 2.5
gcode:
  SET_LED LED=neo RED=0.5 GREEN=0.5 BLUE=0.5 INDEX=5

[delayed_gcode Welcome_6]
initial_duration: 3
gcode:
  SET_LED LED=neo RED=0.5 GREEN=0.5 BLUE=0.5 INDEX=6

[delayed_gcode Welcome_7]
initial_duration: 3.5
gcode:
  SET_LED LED=neo RED=0.5 GREEN=0.5 BLUE=0.5 INDEX=7

[delayed_gcode Welcome_8]
initial_duration: 4
gcode:
  SET_LED LED=neo RED=0.5 GREEN=0.5 BLUE=0.5 INDEX=8

[delayed_gcode Welcome_9]
initial_duration: 4.5
gcode:
  SET_LED LED=neo RED=0.5 GREEN=0.5 BLUE=0.5 INDEX=9

[delayed_gcode Welcome_10]
initial_duration: 5
gcode:
  SET_LED LED=neo RED=0.5 GREEN=0.5 BLUE=0.5 INDEX=10

[delayed_gcode Welcome_11]
initial_duration: 5.5
gcode:
  SET_LED LED=neo RED=0.5 GREEN=0.5 BLUE=0.5 INDEX=11

[delayed_gcode Welcome_12]
initial_duration: 6
gcode:
  SET_LED LED=neo RED=0.5 GREEN=0.5 BLUE=0.5 INDEX=12
